package TreeColl;

import java.util.Scanner;

class Node {
    int data;
    Node left, right;

    Node(int data) {
        this.data = data;
        this.left = null;
        this.right = null;
    }
}

public class TreeData {
    Node root;

    public void insert(int data) {
        root = insertRec(root, data);
    }

    private Node insertRec(Node root, int data) {
        if (root == null) {
            return new Node(data);
        }

        if (data < root.data) {
            root.left = insertRec(root.left, data);
        } else if (data > root.data) {
            root.right = insertRec(root.right, data);
        }

        return root;
    }

    public void inOrder(Node root) {
        if (root == null) return;
        inOrder(root.left);
        System.out.print(root.data + " ");
        inOrder(root.right);
    }

    public void preOrder(Node root) {
        if (root == null) return;
        System.out.print(root.data + " ");
        preOrder(root.left);
        preOrder(root.right);
    }

    public void postOrder(Node root) {
        if (root == null) return;
        postOrder(root.left);
        postOrder(root.right);
        System.out.print(root.data + " ");
    }

    public static void main(String[] args) {
        TreeData tree = new TreeData();
        Scanner sc = new Scanner(System.in);

        System.out.println("Enter numbers to insert into BST (-1 to stop):");
        while (true) {
            int data = sc.nextInt();
            if (data == -1) break;
            tree.insert(data);
        }

        sc.close();

        System.out.println("\nInOrder Traversal:");
        tree.inOrder(tree.root);
        System.out.println("\nPreOrder Traversal:");
        tree.preOrder(tree.root);
        System.out.println("\nPostOrder Traversal:");
        tree.postOrder(tree.root);
    }
}
